#version 330

layout (location = 0) in vec3 v_position;
layout (location = 1) in vec2 v_uv;
layout (location = 2) in vec3 vNormal;

smooth out vec2 uv;
smooth out vec3 fN;
smooth out vec3 fE;
smooth out vec3 fL;
smooth out vec3 fsL;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;

uniform vec4 LightPosition;
uniform vec4 SpotPosition;


void main(void)
{
	

	vec4 v = vec4(v_position, 1.0);

	vec3 pos = ((viewMatrix * modelMatrix) * v).xyz;

	fN = vNormal;
	fE = -pos.xyz;
	fL = LightPosition.xyz;
	fsL = SpotPosition.xyz;

	if(LightPosition.w != 0.0){
		fL = LightPosition.xyz - pos.xyz;
	}

	if(SpotPosition.w != 0.0)
	{
		fsL = SpotPosition.xyz - pos.xyz;
	}


	gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v;
	uv = v_uv;


}
